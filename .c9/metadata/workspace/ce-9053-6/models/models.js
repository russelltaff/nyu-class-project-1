{"changed":false,"filter":false,"title":"models.js","tooltip":"/ce-9053-6/models/models.js","undoManager":{"mark":-1,"position":-1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":151,"column":2},"action":"remove","lines":["var mongoose = require(\"mongoose\");","","var PersonSchema = new mongoose.Schema({","  name: String,","  things: [{","    type: mongoose.Schema.ObjectId,","    ref: \"Thing\"","  }],","  numberOfThings: {","    type: Number,","    default: 0","  }","});","","PersonSchema.statics.getOneByName = function(name, cb) {","  this.findOne({","    name: name","  }).populate(\"things\").exec(cb);","};","","PersonSchema.statics.getOneById = function(id, cb) {","  this.findOne({","    _id: id","  }, cb);","};","","PersonSchema.statics.getAll = function(cb) {","  this.find({}).sort(\"name\").exec(cb);","};","","PersonSchema.statics.acquire = function(personId, thingId, cb) {","  Thing.findById(thingId, function(err, _thing) {","    if (_thing.numberInStock <= 0)","      return cb({","        message: \"NONE_IN_STOCK\"","      });","    var qry = {","      _id: personId","    };","    var update = {","      $push: {","        things: thingId","      },","      $inc: {","        numberOfThings: 1","      }","    };","    Person.update(qry, update, function(err) {","      var query = {","        _id: thingId","      };","      var update = {","        $inc: {","          numberOwned: 1,","          numberInStock: -1","        }","      }","      Thing.update(query, update, function() {","        cb();","      });","    });","  });","};","","PersonSchema.statics.returnThing = function(personId, thingId, cb) {","  this.findById(personId, function(err, _person) {","    var index = _person.things.indexOf(thingId);","    if (index == -1)","      return cb({","        message: \"USER_DOES_NOT_OWN\"","      }, null);","    _person.things.splice(index, 1);","    _person.numberOwned = _person.numberOwned + 1;","    _person.save(function(err) {","      var query = {","        _id: thingId","      };","      var update = {","        $inc: {","          numberOwned: -1,","          numberInStock: 1","        }","      };","      Thing.update(query, update, function() {","        cb();","      });","    });","  });","};","","","var Person = mongoose.model(\"Person\", PersonSchema);","","var ThingSchema = new mongoose.Schema({","  name: String,","  numberOwned: {","    type: Number,","    default: 0","  },","  numberInStock: Number","});","","ThingSchema.statics.getOneByName = function(name, cb) {","  this.findOne({","    name: name","  }, cb);","};","","ThingSchema.statics.getOneById = function(id, cb) {","  this.findById(id, cb);","};","","ThingSchema.statics.getAll = function(cb) {","  this.find({}).sort(\"name\").exec(cb);","};","","var Thing = mongoose.model(\"Thing\", ThingSchema);","","function seed(cb) {","  var people = [{","    name: \"Moe\"","  }, {","    name: \"Larry\"","  }, {","    name: \"Curly\"","  }];","  var things = [{","    name: \"Rock\",","    numberInStock: 10","  }, {","    name: \"Paper\",","    numberInStock: 10","  }, {","    name: \"Scissors\",","    numberInStock: 10","  }];","  Person.remove({}, function() {","    Person.create(people, function(err, moe, larry, curly) {","      Thing.remove({}, function() {","        Thing.create(things, function(err, rock, paper, scissors) {","          cb(err, moe, larry, curly, rock, paper, scissors);","        });","      });","    });","  });","}","","module.exports = {","  seed: seed,","  Person: Person,","  Thing: Thing","};"]},{"start":{"row":0,"column":0},"end":{"row":142,"column":2},"action":"insert","lines":["var mongoose = require(\"mongoose\");","","var PlaceSchema = new mongoose.Schema({","  name: String,","  numberOfTimesFavorited: {","    type: Number,","    default: 0","  }","});","","var PersonSchema = new mongoose.Schema({","  favoritePlaces: [{","    type: mongoose.Schema.ObjectId,","    ref: \"Place\"","  }],","  numberOfFavoritesPlaces: {","    type: Number,","    default: 0","  }","});","","PlaceSchema.statics.getOneByName = function(name, cb) {","  this.findOne({","    name: name","  }).populate(\"places\").exec(cb);","};","","PlaceSchema.statics.getOneById = function(id, cb) {","  this.findOne({","    _id: id","  }, cb);","};","","PlaceSchema.statics.getAll = function(cb) {","  this.find({}).sort(\"name\").exec(cb);","};","","PlaceSchema.statics.getAllFavoritedPlaces = function(cb) {","  this.find({\"numberOfTimesFavorited\": {$gt: 0}}).exec(cb)","};","","PlaceSchema.statics.getAllUnfavoritedPlaces = function(cb) {","  this.find({\"numberOfTimesFavorited\": {$lte: 0}}).exec(cb)","};","","PersonSchema.statics.findAllWhoFavoritedPlace = function(placeId, cb){","  this.find({","    favoritePlaces: placeId","  }, cb);","}","","PersonSchema.statics.addPlace = function(personId, placeId, cb) {","  Person.findById(personId, function(err, _person) {","    if (_person.find({\"favoritePlaces\": placeId}))","      return cb({","        message: \"Already Added\"","      });","    var qry = {","      _id: personId","    };","    var update = {","      $push: {","        place: placeId","      },","      $inc: {","        numberOfFavoritesPlaces: 1","      }","    };","    Place.update(qry, update, function(err) {","      var query = {","        _id: placeId","      };","      var update = {","        $inc: {","          numberOfTimesFavorited: 1,","        }","      }","      Person.update(query, update, function() {","        return cb({","          _person","        });","      });","    });","  });","};","","PersonSchema.statics.removePlace = function(personId, placeId, cb) {","  Person.findById(personId, function(err, _person) {","    if (_person.find({\"favoritePlaces\": placeId}) == false)","      return cb({","        message: \"Person does not have that place\"","      });","    var qry = {","      _id: personId","    };","    var update = {","      $pop: {","        place: placeId","      },","      $inc: {","        numberOfFavoritesPlaces: -1","      }","    };","    Place.update(qry, update, function(err) {","      var query = {","        _id: placeId","      };","      var update = {","        $inc: {","          numberOfTimesFavorited: -1,","        }","      }","      Person.update(query, update, function() {","        return cb({","          _person","        });","      });","    });","  });","};","","var Person = mongoose.model(\"Person\", PersonSchema);","","var Place = mongoose.model(\"Place\", PlaceSchema);","","function seed(cb) {","  var places = [{","    name: \"New York\"","  }, {","    name: \"Paris\"","  }, {","    name: \"London\"","  }];","  Place.create(places, function(err, new_york, paris, london) {","    cb(err, new_york, paris, london);","  });","}","","module.exports = {","  seed: seed,","  Person: Person,","  Place: Place","};"]}]}]]},"ace":{"folds":[],"scrolltop":1922.9999380111694,"scrollleft":0,"selection":{"start":{"row":126,"column":17},"end":{"row":126,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":123,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1427919684387}